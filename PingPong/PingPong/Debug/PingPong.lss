
PingPong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000514  000005a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000514  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800106  00800106  000005ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005ae  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000005de  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000231  00000000  00000000  0000062e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000193  00000000  00000000  0000085f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000154  00000000  00000000  000009f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  00000b48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000017f  00000000  00000000  00000bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000030  00000000  00000000  00000d2f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 e1       	ldi	r30, 0x14	; 20
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 30       	cpi	r26, 0x06	; 6
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e0       	ldi	r26, 0x06	; 6
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
  a6:	0c 94 88 02 	jmp	0x510	; 0x510 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <USART_Transmit>:
}

void USART_Transmit( unsigned char data ){

	//Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <USART_Transmit>

	//Put data into buffer, sends the data
	UDR0 = data;
  b2:	8c b9       	out	0x0c, r24	; 12
  b4:	08 95       	ret

000000b6 <USART_Receive>:
}

unsigned char USART_Receive(void){
	
	//Wait for data to be received
	while( !(UCSR0A & (1<<RXC0)) );
  b6:	5f 9b       	sbis	0x0b, 7	; 11
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <USART_Receive>
	//Get and return received data from buffer
	return UDR0;
  ba:	8c b1       	in	r24, 0x0c	; 12
  bc:	08 95       	ret

000000be <USART_Init>:
void USART_Init(){
	//ubbr = F_CPU
	int baudRate = 19200;
	unsigned int ubrr = F_CPU/(16*baudRate) -1;
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
  be:	8f ef       	ldi	r24, 0xFF	; 255
  c0:	80 bd       	out	0x20, r24	; 32
	UBRR0L = (unsigned char)ubrr;
  c2:	8f e0       	ldi	r24, 0x0F	; 15
  c4:	89 b9       	out	0x09, r24	; 9
	
	//Enable receiver and transmitter
	UCSR0B	 = (1<<RXEN0)|(1<<TXEN0);
  c6:	88 e1       	ldi	r24, 0x18	; 24
  c8:	8a b9       	out	0x0a, r24	; 10
		//RXEN:  Aktiverer USART receiver
		//TXEN: Aktiverer USART transmitter
		
	
	//Set frame format: 8data, 2stop bit
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
  ca:	8e e8       	ldi	r24, 0x8E	; 142
  cc:	80 bd       	out	0x20, r24	; 32
		//URSEL: Skriver til UCSRC istedet for UBRRH, ved 1.
		//USBS0: Antall stop bits, 0->1bit, 1->2bit
		//UCZ0/1/2: Character size 011->8bit. 
		
	//Slik at vi kan bruke printf;
	fdevopen(USART_Transmit,USART_Receive);
  ce:	6b e5       	ldi	r22, 0x5B	; 91
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	87 e5       	ldi	r24, 0x57	; 87
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	0e 94 75 00 	call	0xea	; 0xea <fdevopen>
  da:	08 95       	ret

000000dc <main>:

#include "MainInclude/MainInclude.h"
#include "Drivers/UsartDriver.h"

int main(void){
	USART_Init();
  dc:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_Init>
	
    while(1){
		putchar(getchar());
  e0:	0e 94 c0 00 	call	0x180	; 0x180 <getchar>
  e4:	0e 94 c7 00 	call	0x18e	; 0x18e <putchar>
  e8:	fb cf       	rjmp	.-10     	; 0xe0 <main+0x4>

000000ea <fdevopen>:
  ea:	0f 93       	push	r16
  ec:	1f 93       	push	r17
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	ec 01       	movw	r28, r24
  f4:	8b 01       	movw	r16, r22
  f6:	00 97       	sbiw	r24, 0x00	; 0
  f8:	31 f4       	brne	.+12     	; 0x106 <fdevopen+0x1c>
  fa:	61 15       	cp	r22, r1
  fc:	71 05       	cpc	r23, r1
  fe:	19 f4       	brne	.+6      	; 0x106 <fdevopen+0x1c>
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	38 c0       	rjmp	.+112    	; 0x176 <fdevopen+0x8c>
 106:	6e e0       	ldi	r22, 0x0E	; 14
 108:	70 e0       	ldi	r23, 0x00	; 0
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	0e 94 ce 00 	call	0x19c	; 0x19c <calloc>
 112:	fc 01       	movw	r30, r24
 114:	00 97       	sbiw	r24, 0x00	; 0
 116:	a1 f3       	breq	.-24     	; 0x100 <fdevopen+0x16>
 118:	80 e8       	ldi	r24, 0x80	; 128
 11a:	83 83       	std	Z+3, r24	; 0x03
 11c:	01 15       	cp	r16, r1
 11e:	11 05       	cpc	r17, r1
 120:	71 f0       	breq	.+28     	; 0x13e <fdevopen+0x54>
 122:	13 87       	std	Z+11, r17	; 0x0b
 124:	02 87       	std	Z+10, r16	; 0x0a
 126:	81 e8       	ldi	r24, 0x81	; 129
 128:	83 83       	std	Z+3, r24	; 0x03
 12a:	80 91 06 01 	lds	r24, 0x0106
 12e:	90 91 07 01 	lds	r25, 0x0107
 132:	89 2b       	or	r24, r25
 134:	21 f4       	brne	.+8      	; 0x13e <fdevopen+0x54>
 136:	f0 93 07 01 	sts	0x0107, r31
 13a:	e0 93 06 01 	sts	0x0106, r30
 13e:	20 97       	sbiw	r28, 0x00	; 0
 140:	c9 f0       	breq	.+50     	; 0x174 <fdevopen+0x8a>
 142:	d1 87       	std	Z+9, r29	; 0x09
 144:	c0 87       	std	Z+8, r28	; 0x08
 146:	83 81       	ldd	r24, Z+3	; 0x03
 148:	82 60       	ori	r24, 0x02	; 2
 14a:	83 83       	std	Z+3, r24	; 0x03
 14c:	80 91 08 01 	lds	r24, 0x0108
 150:	90 91 09 01 	lds	r25, 0x0109
 154:	89 2b       	or	r24, r25
 156:	71 f4       	brne	.+28     	; 0x174 <fdevopen+0x8a>
 158:	f0 93 09 01 	sts	0x0109, r31
 15c:	e0 93 08 01 	sts	0x0108, r30
 160:	80 91 0a 01 	lds	r24, 0x010A
 164:	90 91 0b 01 	lds	r25, 0x010B
 168:	89 2b       	or	r24, r25
 16a:	21 f4       	brne	.+8      	; 0x174 <fdevopen+0x8a>
 16c:	f0 93 0b 01 	sts	0x010B, r31
 170:	e0 93 0a 01 	sts	0x010A, r30
 174:	cf 01       	movw	r24, r30
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	1f 91       	pop	r17
 17c:	0f 91       	pop	r16
 17e:	08 95       	ret

00000180 <getchar>:
 180:	80 91 06 01 	lds	r24, 0x0106
 184:	90 91 07 01 	lds	r25, 0x0107
 188:	0e 94 18 02 	call	0x430	; 0x430 <fgetc>
 18c:	08 95       	ret

0000018e <putchar>:
 18e:	60 91 08 01 	lds	r22, 0x0108
 192:	70 91 09 01 	lds	r23, 0x0109
 196:	0e 94 56 02 	call	0x4ac	; 0x4ac <fputc>
 19a:	08 95       	ret

0000019c <calloc>:
 19c:	0f 93       	push	r16
 19e:	1f 93       	push	r17
 1a0:	cf 93       	push	r28
 1a2:	df 93       	push	r29
 1a4:	86 9f       	mul	r24, r22
 1a6:	80 01       	movw	r16, r0
 1a8:	87 9f       	mul	r24, r23
 1aa:	10 0d       	add	r17, r0
 1ac:	96 9f       	mul	r25, r22
 1ae:	10 0d       	add	r17, r0
 1b0:	11 24       	eor	r1, r1
 1b2:	c8 01       	movw	r24, r16
 1b4:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <malloc>
 1b8:	ec 01       	movw	r28, r24
 1ba:	00 97       	sbiw	r24, 0x00	; 0
 1bc:	29 f0       	breq	.+10     	; 0x1c8 <calloc+0x2c>
 1be:	a8 01       	movw	r20, r16
 1c0:	60 e0       	ldi	r22, 0x00	; 0
 1c2:	70 e0       	ldi	r23, 0x00	; 0
 1c4:	0e 94 11 02 	call	0x422	; 0x422 <memset>
 1c8:	ce 01       	movw	r24, r28
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	1f 91       	pop	r17
 1d0:	0f 91       	pop	r16
 1d2:	08 95       	ret

000001d4 <malloc>:
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	82 30       	cpi	r24, 0x02	; 2
 1da:	91 05       	cpc	r25, r1
 1dc:	10 f4       	brcc	.+4      	; 0x1e2 <malloc+0xe>
 1de:	82 e0       	ldi	r24, 0x02	; 2
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	e0 91 0e 01 	lds	r30, 0x010E
 1e6:	f0 91 0f 01 	lds	r31, 0x010F
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	a0 e0       	ldi	r26, 0x00	; 0
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	30 97       	sbiw	r30, 0x00	; 0
 1f4:	39 f1       	breq	.+78     	; 0x244 <malloc+0x70>
 1f6:	40 81       	ld	r20, Z
 1f8:	51 81       	ldd	r21, Z+1	; 0x01
 1fa:	48 17       	cp	r20, r24
 1fc:	59 07       	cpc	r21, r25
 1fe:	b8 f0       	brcs	.+46     	; 0x22e <malloc+0x5a>
 200:	48 17       	cp	r20, r24
 202:	59 07       	cpc	r21, r25
 204:	71 f4       	brne	.+28     	; 0x222 <malloc+0x4e>
 206:	82 81       	ldd	r24, Z+2	; 0x02
 208:	93 81       	ldd	r25, Z+3	; 0x03
 20a:	10 97       	sbiw	r26, 0x00	; 0
 20c:	29 f0       	breq	.+10     	; 0x218 <malloc+0x44>
 20e:	13 96       	adiw	r26, 0x03	; 3
 210:	9c 93       	st	X, r25
 212:	8e 93       	st	-X, r24
 214:	12 97       	sbiw	r26, 0x02	; 2
 216:	2c c0       	rjmp	.+88     	; 0x270 <malloc+0x9c>
 218:	90 93 0f 01 	sts	0x010F, r25
 21c:	80 93 0e 01 	sts	0x010E, r24
 220:	27 c0       	rjmp	.+78     	; 0x270 <malloc+0x9c>
 222:	21 15       	cp	r18, r1
 224:	31 05       	cpc	r19, r1
 226:	31 f0       	breq	.+12     	; 0x234 <malloc+0x60>
 228:	42 17       	cp	r20, r18
 22a:	53 07       	cpc	r21, r19
 22c:	18 f0       	brcs	.+6      	; 0x234 <malloc+0x60>
 22e:	a9 01       	movw	r20, r18
 230:	db 01       	movw	r26, r22
 232:	01 c0       	rjmp	.+2      	; 0x236 <malloc+0x62>
 234:	ef 01       	movw	r28, r30
 236:	9a 01       	movw	r18, r20
 238:	bd 01       	movw	r22, r26
 23a:	df 01       	movw	r26, r30
 23c:	02 80       	ldd	r0, Z+2	; 0x02
 23e:	f3 81       	ldd	r31, Z+3	; 0x03
 240:	e0 2d       	mov	r30, r0
 242:	d7 cf       	rjmp	.-82     	; 0x1f2 <malloc+0x1e>
 244:	21 15       	cp	r18, r1
 246:	31 05       	cpc	r19, r1
 248:	f9 f0       	breq	.+62     	; 0x288 <malloc+0xb4>
 24a:	28 1b       	sub	r18, r24
 24c:	39 0b       	sbc	r19, r25
 24e:	24 30       	cpi	r18, 0x04	; 4
 250:	31 05       	cpc	r19, r1
 252:	80 f4       	brcc	.+32     	; 0x274 <malloc+0xa0>
 254:	8a 81       	ldd	r24, Y+2	; 0x02
 256:	9b 81       	ldd	r25, Y+3	; 0x03
 258:	61 15       	cp	r22, r1
 25a:	71 05       	cpc	r23, r1
 25c:	21 f0       	breq	.+8      	; 0x266 <malloc+0x92>
 25e:	fb 01       	movw	r30, r22
 260:	93 83       	std	Z+3, r25	; 0x03
 262:	82 83       	std	Z+2, r24	; 0x02
 264:	04 c0       	rjmp	.+8      	; 0x26e <malloc+0x9a>
 266:	90 93 0f 01 	sts	0x010F, r25
 26a:	80 93 0e 01 	sts	0x010E, r24
 26e:	fe 01       	movw	r30, r28
 270:	32 96       	adiw	r30, 0x02	; 2
 272:	44 c0       	rjmp	.+136    	; 0x2fc <malloc+0x128>
 274:	fe 01       	movw	r30, r28
 276:	e2 0f       	add	r30, r18
 278:	f3 1f       	adc	r31, r19
 27a:	81 93       	st	Z+, r24
 27c:	91 93       	st	Z+, r25
 27e:	22 50       	subi	r18, 0x02	; 2
 280:	31 09       	sbc	r19, r1
 282:	39 83       	std	Y+1, r19	; 0x01
 284:	28 83       	st	Y, r18
 286:	3a c0       	rjmp	.+116    	; 0x2fc <malloc+0x128>
 288:	20 91 0c 01 	lds	r18, 0x010C
 28c:	30 91 0d 01 	lds	r19, 0x010D
 290:	23 2b       	or	r18, r19
 292:	41 f4       	brne	.+16     	; 0x2a4 <malloc+0xd0>
 294:	20 91 02 01 	lds	r18, 0x0102
 298:	30 91 03 01 	lds	r19, 0x0103
 29c:	30 93 0d 01 	sts	0x010D, r19
 2a0:	20 93 0c 01 	sts	0x010C, r18
 2a4:	20 91 00 01 	lds	r18, 0x0100
 2a8:	30 91 01 01 	lds	r19, 0x0101
 2ac:	21 15       	cp	r18, r1
 2ae:	31 05       	cpc	r19, r1
 2b0:	41 f4       	brne	.+16     	; 0x2c2 <malloc+0xee>
 2b2:	2d b7       	in	r18, 0x3d	; 61
 2b4:	3e b7       	in	r19, 0x3e	; 62
 2b6:	40 91 04 01 	lds	r20, 0x0104
 2ba:	50 91 05 01 	lds	r21, 0x0105
 2be:	24 1b       	sub	r18, r20
 2c0:	35 0b       	sbc	r19, r21
 2c2:	e0 91 0c 01 	lds	r30, 0x010C
 2c6:	f0 91 0d 01 	lds	r31, 0x010D
 2ca:	e2 17       	cp	r30, r18
 2cc:	f3 07       	cpc	r31, r19
 2ce:	a0 f4       	brcc	.+40     	; 0x2f8 <malloc+0x124>
 2d0:	2e 1b       	sub	r18, r30
 2d2:	3f 0b       	sbc	r19, r31
 2d4:	28 17       	cp	r18, r24
 2d6:	39 07       	cpc	r19, r25
 2d8:	78 f0       	brcs	.+30     	; 0x2f8 <malloc+0x124>
 2da:	ac 01       	movw	r20, r24
 2dc:	4e 5f       	subi	r20, 0xFE	; 254
 2de:	5f 4f       	sbci	r21, 0xFF	; 255
 2e0:	24 17       	cp	r18, r20
 2e2:	35 07       	cpc	r19, r21
 2e4:	48 f0       	brcs	.+18     	; 0x2f8 <malloc+0x124>
 2e6:	4e 0f       	add	r20, r30
 2e8:	5f 1f       	adc	r21, r31
 2ea:	50 93 0d 01 	sts	0x010D, r21
 2ee:	40 93 0c 01 	sts	0x010C, r20
 2f2:	81 93       	st	Z+, r24
 2f4:	91 93       	st	Z+, r25
 2f6:	02 c0       	rjmp	.+4      	; 0x2fc <malloc+0x128>
 2f8:	e0 e0       	ldi	r30, 0x00	; 0
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	cf 01       	movw	r24, r30
 2fe:	df 91       	pop	r29
 300:	cf 91       	pop	r28
 302:	08 95       	ret

00000304 <free>:
 304:	cf 93       	push	r28
 306:	df 93       	push	r29
 308:	00 97       	sbiw	r24, 0x00	; 0
 30a:	09 f4       	brne	.+2      	; 0x30e <free+0xa>
 30c:	87 c0       	rjmp	.+270    	; 0x41c <free+0x118>
 30e:	fc 01       	movw	r30, r24
 310:	32 97       	sbiw	r30, 0x02	; 2
 312:	13 82       	std	Z+3, r1	; 0x03
 314:	12 82       	std	Z+2, r1	; 0x02
 316:	c0 91 0e 01 	lds	r28, 0x010E
 31a:	d0 91 0f 01 	lds	r29, 0x010F
 31e:	20 97       	sbiw	r28, 0x00	; 0
 320:	81 f4       	brne	.+32     	; 0x342 <free+0x3e>
 322:	20 81       	ld	r18, Z
 324:	31 81       	ldd	r19, Z+1	; 0x01
 326:	28 0f       	add	r18, r24
 328:	39 1f       	adc	r19, r25
 32a:	80 91 0c 01 	lds	r24, 0x010C
 32e:	90 91 0d 01 	lds	r25, 0x010D
 332:	82 17       	cp	r24, r18
 334:	93 07       	cpc	r25, r19
 336:	79 f5       	brne	.+94     	; 0x396 <free+0x92>
 338:	f0 93 0d 01 	sts	0x010D, r31
 33c:	e0 93 0c 01 	sts	0x010C, r30
 340:	6d c0       	rjmp	.+218    	; 0x41c <free+0x118>
 342:	de 01       	movw	r26, r28
 344:	20 e0       	ldi	r18, 0x00	; 0
 346:	30 e0       	ldi	r19, 0x00	; 0
 348:	ae 17       	cp	r26, r30
 34a:	bf 07       	cpc	r27, r31
 34c:	50 f4       	brcc	.+20     	; 0x362 <free+0x5e>
 34e:	12 96       	adiw	r26, 0x02	; 2
 350:	4d 91       	ld	r20, X+
 352:	5c 91       	ld	r21, X
 354:	13 97       	sbiw	r26, 0x03	; 3
 356:	9d 01       	movw	r18, r26
 358:	41 15       	cp	r20, r1
 35a:	51 05       	cpc	r21, r1
 35c:	09 f1       	breq	.+66     	; 0x3a0 <free+0x9c>
 35e:	da 01       	movw	r26, r20
 360:	f3 cf       	rjmp	.-26     	; 0x348 <free+0x44>
 362:	b3 83       	std	Z+3, r27	; 0x03
 364:	a2 83       	std	Z+2, r26	; 0x02
 366:	40 81       	ld	r20, Z
 368:	51 81       	ldd	r21, Z+1	; 0x01
 36a:	84 0f       	add	r24, r20
 36c:	95 1f       	adc	r25, r21
 36e:	8a 17       	cp	r24, r26
 370:	9b 07       	cpc	r25, r27
 372:	71 f4       	brne	.+28     	; 0x390 <free+0x8c>
 374:	8d 91       	ld	r24, X+
 376:	9c 91       	ld	r25, X
 378:	11 97       	sbiw	r26, 0x01	; 1
 37a:	84 0f       	add	r24, r20
 37c:	95 1f       	adc	r25, r21
 37e:	02 96       	adiw	r24, 0x02	; 2
 380:	91 83       	std	Z+1, r25	; 0x01
 382:	80 83       	st	Z, r24
 384:	12 96       	adiw	r26, 0x02	; 2
 386:	8d 91       	ld	r24, X+
 388:	9c 91       	ld	r25, X
 38a:	13 97       	sbiw	r26, 0x03	; 3
 38c:	93 83       	std	Z+3, r25	; 0x03
 38e:	82 83       	std	Z+2, r24	; 0x02
 390:	21 15       	cp	r18, r1
 392:	31 05       	cpc	r19, r1
 394:	29 f4       	brne	.+10     	; 0x3a0 <free+0x9c>
 396:	f0 93 0f 01 	sts	0x010F, r31
 39a:	e0 93 0e 01 	sts	0x010E, r30
 39e:	3e c0       	rjmp	.+124    	; 0x41c <free+0x118>
 3a0:	d9 01       	movw	r26, r18
 3a2:	13 96       	adiw	r26, 0x03	; 3
 3a4:	fc 93       	st	X, r31
 3a6:	ee 93       	st	-X, r30
 3a8:	12 97       	sbiw	r26, 0x02	; 2
 3aa:	4d 91       	ld	r20, X+
 3ac:	5d 91       	ld	r21, X+
 3ae:	a4 0f       	add	r26, r20
 3b0:	b5 1f       	adc	r27, r21
 3b2:	ea 17       	cp	r30, r26
 3b4:	fb 07       	cpc	r31, r27
 3b6:	79 f4       	brne	.+30     	; 0x3d6 <free+0xd2>
 3b8:	80 81       	ld	r24, Z
 3ba:	91 81       	ldd	r25, Z+1	; 0x01
 3bc:	84 0f       	add	r24, r20
 3be:	95 1f       	adc	r25, r21
 3c0:	02 96       	adiw	r24, 0x02	; 2
 3c2:	d9 01       	movw	r26, r18
 3c4:	11 96       	adiw	r26, 0x01	; 1
 3c6:	9c 93       	st	X, r25
 3c8:	8e 93       	st	-X, r24
 3ca:	82 81       	ldd	r24, Z+2	; 0x02
 3cc:	93 81       	ldd	r25, Z+3	; 0x03
 3ce:	13 96       	adiw	r26, 0x03	; 3
 3d0:	9c 93       	st	X, r25
 3d2:	8e 93       	st	-X, r24
 3d4:	12 97       	sbiw	r26, 0x02	; 2
 3d6:	e0 e0       	ldi	r30, 0x00	; 0
 3d8:	f0 e0       	ldi	r31, 0x00	; 0
 3da:	8a 81       	ldd	r24, Y+2	; 0x02
 3dc:	9b 81       	ldd	r25, Y+3	; 0x03
 3de:	00 97       	sbiw	r24, 0x00	; 0
 3e0:	19 f0       	breq	.+6      	; 0x3e8 <free+0xe4>
 3e2:	fe 01       	movw	r30, r28
 3e4:	ec 01       	movw	r28, r24
 3e6:	f9 cf       	rjmp	.-14     	; 0x3da <free+0xd6>
 3e8:	ce 01       	movw	r24, r28
 3ea:	02 96       	adiw	r24, 0x02	; 2
 3ec:	28 81       	ld	r18, Y
 3ee:	39 81       	ldd	r19, Y+1	; 0x01
 3f0:	82 0f       	add	r24, r18
 3f2:	93 1f       	adc	r25, r19
 3f4:	20 91 0c 01 	lds	r18, 0x010C
 3f8:	30 91 0d 01 	lds	r19, 0x010D
 3fc:	28 17       	cp	r18, r24
 3fe:	39 07       	cpc	r19, r25
 400:	69 f4       	brne	.+26     	; 0x41c <free+0x118>
 402:	30 97       	sbiw	r30, 0x00	; 0
 404:	29 f4       	brne	.+10     	; 0x410 <free+0x10c>
 406:	10 92 0f 01 	sts	0x010F, r1
 40a:	10 92 0e 01 	sts	0x010E, r1
 40e:	02 c0       	rjmp	.+4      	; 0x414 <free+0x110>
 410:	13 82       	std	Z+3, r1	; 0x03
 412:	12 82       	std	Z+2, r1	; 0x02
 414:	d0 93 0d 01 	sts	0x010D, r29
 418:	c0 93 0c 01 	sts	0x010C, r28
 41c:	df 91       	pop	r29
 41e:	cf 91       	pop	r28
 420:	08 95       	ret

00000422 <memset>:
 422:	dc 01       	movw	r26, r24
 424:	01 c0       	rjmp	.+2      	; 0x428 <memset+0x6>
 426:	6d 93       	st	X+, r22
 428:	41 50       	subi	r20, 0x01	; 1
 42a:	50 40       	sbci	r21, 0x00	; 0
 42c:	e0 f7       	brcc	.-8      	; 0x426 <memset+0x4>
 42e:	08 95       	ret

00000430 <fgetc>:
 430:	cf 93       	push	r28
 432:	df 93       	push	r29
 434:	ec 01       	movw	r28, r24
 436:	2b 81       	ldd	r18, Y+3	; 0x03
 438:	20 ff       	sbrs	r18, 0
 43a:	33 c0       	rjmp	.+102    	; 0x4a2 <fgetc+0x72>
 43c:	26 ff       	sbrs	r18, 6
 43e:	0a c0       	rjmp	.+20     	; 0x454 <fgetc+0x24>
 440:	2f 7b       	andi	r18, 0xBF	; 191
 442:	2b 83       	std	Y+3, r18	; 0x03
 444:	8e 81       	ldd	r24, Y+6	; 0x06
 446:	9f 81       	ldd	r25, Y+7	; 0x07
 448:	01 96       	adiw	r24, 0x01	; 1
 44a:	9f 83       	std	Y+7, r25	; 0x07
 44c:	8e 83       	std	Y+6, r24	; 0x06
 44e:	8a 81       	ldd	r24, Y+2	; 0x02
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	29 c0       	rjmp	.+82     	; 0x4a6 <fgetc+0x76>
 454:	22 ff       	sbrs	r18, 2
 456:	0f c0       	rjmp	.+30     	; 0x476 <fgetc+0x46>
 458:	e8 81       	ld	r30, Y
 45a:	f9 81       	ldd	r31, Y+1	; 0x01
 45c:	80 81       	ld	r24, Z
 45e:	99 27       	eor	r25, r25
 460:	87 fd       	sbrc	r24, 7
 462:	90 95       	com	r25
 464:	00 97       	sbiw	r24, 0x00	; 0
 466:	19 f4       	brne	.+6      	; 0x46e <fgetc+0x3e>
 468:	20 62       	ori	r18, 0x20	; 32
 46a:	2b 83       	std	Y+3, r18	; 0x03
 46c:	1a c0       	rjmp	.+52     	; 0x4a2 <fgetc+0x72>
 46e:	31 96       	adiw	r30, 0x01	; 1
 470:	f9 83       	std	Y+1, r31	; 0x01
 472:	e8 83       	st	Y, r30
 474:	0e c0       	rjmp	.+28     	; 0x492 <fgetc+0x62>
 476:	ea 85       	ldd	r30, Y+10	; 0x0a
 478:	fb 85       	ldd	r31, Y+11	; 0x0b
 47a:	09 95       	icall
 47c:	97 ff       	sbrs	r25, 7
 47e:	09 c0       	rjmp	.+18     	; 0x492 <fgetc+0x62>
 480:	2b 81       	ldd	r18, Y+3	; 0x03
 482:	01 96       	adiw	r24, 0x01	; 1
 484:	11 f4       	brne	.+4      	; 0x48a <fgetc+0x5a>
 486:	80 e1       	ldi	r24, 0x10	; 16
 488:	01 c0       	rjmp	.+2      	; 0x48c <fgetc+0x5c>
 48a:	80 e2       	ldi	r24, 0x20	; 32
 48c:	82 2b       	or	r24, r18
 48e:	8b 83       	std	Y+3, r24	; 0x03
 490:	08 c0       	rjmp	.+16     	; 0x4a2 <fgetc+0x72>
 492:	2e 81       	ldd	r18, Y+6	; 0x06
 494:	3f 81       	ldd	r19, Y+7	; 0x07
 496:	2f 5f       	subi	r18, 0xFF	; 255
 498:	3f 4f       	sbci	r19, 0xFF	; 255
 49a:	3f 83       	std	Y+7, r19	; 0x07
 49c:	2e 83       	std	Y+6, r18	; 0x06
 49e:	99 27       	eor	r25, r25
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <fgetc+0x76>
 4a2:	8f ef       	ldi	r24, 0xFF	; 255
 4a4:	9f ef       	ldi	r25, 0xFF	; 255
 4a6:	df 91       	pop	r29
 4a8:	cf 91       	pop	r28
 4aa:	08 95       	ret

000004ac <fputc>:
 4ac:	0f 93       	push	r16
 4ae:	1f 93       	push	r17
 4b0:	cf 93       	push	r28
 4b2:	df 93       	push	r29
 4b4:	18 2f       	mov	r17, r24
 4b6:	09 2f       	mov	r16, r25
 4b8:	eb 01       	movw	r28, r22
 4ba:	8b 81       	ldd	r24, Y+3	; 0x03
 4bc:	81 fd       	sbrc	r24, 1
 4be:	03 c0       	rjmp	.+6      	; 0x4c6 <fputc+0x1a>
 4c0:	8f ef       	ldi	r24, 0xFF	; 255
 4c2:	9f ef       	ldi	r25, 0xFF	; 255
 4c4:	20 c0       	rjmp	.+64     	; 0x506 <__stack+0x7>
 4c6:	82 ff       	sbrs	r24, 2
 4c8:	10 c0       	rjmp	.+32     	; 0x4ea <fputc+0x3e>
 4ca:	4e 81       	ldd	r20, Y+6	; 0x06
 4cc:	5f 81       	ldd	r21, Y+7	; 0x07
 4ce:	2c 81       	ldd	r18, Y+4	; 0x04
 4d0:	3d 81       	ldd	r19, Y+5	; 0x05
 4d2:	42 17       	cp	r20, r18
 4d4:	53 07       	cpc	r21, r19
 4d6:	7c f4       	brge	.+30     	; 0x4f6 <fputc+0x4a>
 4d8:	e8 81       	ld	r30, Y
 4da:	f9 81       	ldd	r31, Y+1	; 0x01
 4dc:	9f 01       	movw	r18, r30
 4de:	2f 5f       	subi	r18, 0xFF	; 255
 4e0:	3f 4f       	sbci	r19, 0xFF	; 255
 4e2:	39 83       	std	Y+1, r19	; 0x01
 4e4:	28 83       	st	Y, r18
 4e6:	10 83       	st	Z, r17
 4e8:	06 c0       	rjmp	.+12     	; 0x4f6 <fputc+0x4a>
 4ea:	e8 85       	ldd	r30, Y+8	; 0x08
 4ec:	f9 85       	ldd	r31, Y+9	; 0x09
 4ee:	81 2f       	mov	r24, r17
 4f0:	09 95       	icall
 4f2:	89 2b       	or	r24, r25
 4f4:	29 f7       	brne	.-54     	; 0x4c0 <fputc+0x14>
 4f6:	2e 81       	ldd	r18, Y+6	; 0x06
 4f8:	3f 81       	ldd	r19, Y+7	; 0x07
 4fa:	2f 5f       	subi	r18, 0xFF	; 255
 4fc:	3f 4f       	sbci	r19, 0xFF	; 255
 4fe:	3f 83       	std	Y+7, r19	; 0x07
 500:	2e 83       	std	Y+6, r18	; 0x06
 502:	81 2f       	mov	r24, r17
 504:	90 2f       	mov	r25, r16
 506:	df 91       	pop	r29
 508:	cf 91       	pop	r28
 50a:	1f 91       	pop	r17
 50c:	0f 91       	pop	r16
 50e:	08 95       	ret

00000510 <_exit>:
 510:	f8 94       	cli

00000512 <__stop_program>:
 512:	ff cf       	rjmp	.-2      	; 0x512 <__stop_program>
